{"ast":null,"code":"var _jsxFileName = \"/Users/ueharayuuta/react_practice/todo/src/components/InputToDo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport 'bulma/css/bulma.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputToDo = props => {\n  _s();\n  //stateを作成\n  const [text, setText] = useState('');\n\n  //入力値にtextを反映\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  //Enter押下時，Todoに追加\n  const handleEnter = e => {\n    if (e.key === 'Enter') {\n      //入力値が空白の場合終了\n      if (!text.math(/\\S/g)) return;\n      //TodoAppクラスの「handleAdd関数を実行」\n      props.onAdd(text);\n      setText('');\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"diva\", {\n    className: \"panel-block\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      class: \"input\",\n      type: \"text\",\n      placeholder: \"Enter to add\",\n      value: text,\n      onChange: handleChange,\n      onKeyPress: handleEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(InputToDo, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = InputToDo;\nvar _c;\n$RefreshReg$(_c, \"InputToDo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InputToDo","props","_s","text","setText","handleChange","e","target","value","handleEnter","key","math","onAdd","className","children","class","type","placeholder","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ueharayuuta/react_practice/todo/src/components/InputToDo.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport 'bulma/css/bulma.css';\n\nexport const InputToDo = (props) => {\n\n    //stateを作成\n    const [text, setText] = useState('');\n\n    //入力値にtextを反映\n    const handleChange = (e) => {\n        setText(e.target.value);\n    };\n\n    //Enter押下時，Todoに追加\n    const handleEnter = (e) => {\n        if (e.key === 'Enter') {\n            //入力値が空白の場合終了\n            if (!text.math(/\\S/g)) return;\n            //TodoAppクラスの「handleAdd関数を実行」\n            props.onAdd(text);\n            setText('');\n        };\n    };\n\n    return (\n        <diva className=\"panel-block\">\n            <input\n            class=\"input\"\n            type=\"text\"\n            placeholder=\"Enter to add\"\n            value={text}\n            onChange={handleChange}\n            onKeyPress={handleEnter}\n\n            />\n        </diva>\n    )\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,OAAO,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEhC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IACxBF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,WAAW,GAAIH,CAAC,IAAK;IACvB,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,EAAE;MACnB;MACA,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,KAAK,CAAC,EAAE;MACvB;MACAV,KAAK,CAACW,KAAK,CAACT,IAAI,CAAC;MACjBC,OAAO,CAAC,EAAE,CAAC;IACf;IAAC;EACL,CAAC;EAED,oBACIL,OAAA;IAAMc,SAAS,EAAC,aAAa;IAAAC,QAAA,eACzBf,OAAA;MACAgB,KAAK,EAAC,OAAO;MACbC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAc;MAC1BT,KAAK,EAAEL,IAAK;MACZe,QAAQ,EAAEb,YAAa;MACvBc,UAAU,EAAEV;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGf,CAAC;AAAArB,EAAA,CAnCYF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}